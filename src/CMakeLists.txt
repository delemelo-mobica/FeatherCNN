file(GLOB LIB_HEADERS *.h)
file(GLOB CL_HEADERS booster/include/CL/*.h)
file(GLOB CLHPP_HEADERS booster/include/CLHPP/*.hpp)
file(GLOB LIB_SRC *.cpp)
file(GLOB LAYER_HEADERS layers/*.h)
file(GLOB LAYER_SRC layers/*.cpp)
file(GLOB LAYER_CL_HEADERS layers_cl/*.h)
file(GLOB LAYER_CL_SRC layers_cl/*.cpp)
file(GLOB FLATBUFFERS_HEADERS flatbuffers/*.h)

if(CMAKE_SYSTEM_NAME MATCHES "Windows")
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} -O3 -std=c++11")
else()
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} -O3 -std=c++11 -Wno-format")
endif()
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -g -std=c++11 -Wall")

if(COMPILE_OPENCL)
	set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -DFEATHER_OPENCL")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DFEATHER_OPENCL")
	#add_library(booster_cl_obj OBJECT ${LAYER_CL_SRC} ${LAYER_CL_HEADERS})
endif()

include_directories("${PROJECT_SOURCE_DIR}/src")
include_directories("booster/include")

message(STATUS "Using Booster backend.")
add_subdirectory(./booster)
if(BOOSTER_ARM)
	if(COMPILE_OPENCL)
		add_library(feather STATIC ${LIB_SRC} ${LIB_HEADERS} ${LAYER_SRC} ${LAYER_CL_SRC} ${LAYER_HEADERS} ${LAYER_CL_HEADERS} $<TARGET_OBJECTS:booster_arm_obj> $<TARGET_OBJECTS:booster_cl_obj>)
		#add_library(feather STATIC ${LIB_SRC} ${LIB_HEADERS} ${LAYER_SRC} ${LAYER_HEADERS} $<TARGET_OBJECTS:booster_arm_obj> $<TARGET_OBJECTS:booster_cl_obj>)
	else()
		add_library(feather STATIC ${LIB_SRC} ${LIB_HEADERS} ${LAYER_SRC} ${LAYER_HEADERS} $<TARGET_OBJECTS:booster_arm_obj>)
	endif()
	#add_library(feather STATIC ${LIB_SRC} ${LIB_HEADERS} ${LAYER_SRC}  ${LAYER_HEADERS} $<TARGET_OBJECTS:booster_arm_obj>)
else()
	if(COMPILE_OPENCL)
		add_library(feather STATIC ${LIB_SRC} ${LIB_HEADERS} ${LAYER_SRC} ${LAYER_CL_SRC} ${LAYER_HEADERS} ${LAYER_CL_HEADERS} $<TARGET_OBJECTS:booster_avx_obj> $<TARGET_OBJECTS:booster_cl_obj>)
	else()
		add_library(feather STATIC ${LIB_SRC} ${LIB_HEADERS} ${LAYER_SRC} ${LAYER_HEADERS} $<TARGET_OBJECTS:booster_avx_obj>)
	endif()
endif()

set(FEATHER_INSTALL_DIR "${PROJECT_BINARY_DIR}/install/feather")

message(Library headers: ${LIB_HEADERS})
list(REMOVE_ITEM LIB_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/feather_simple_generated.h)
message(Library headers: ${LIB_HEADERS})
install(TARGETS feather DESTINATION "${FEATHER_INSTALL_DIR}/lib")
install(FILES ${LIB_HEADERS} DESTINATION "${FEATHER_INSTALL_DIR}/include")
install(FILES ${CL_HEADERS} DESTINATION "${FEATHER_INSTALL_DIR}/include/CL")
install(FILES ${CLHPP_HEADERS} DESTINATION "${FEATHER_INSTALL_DIR}/include/CLHPP")
